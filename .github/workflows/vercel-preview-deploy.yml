name: Vercel Preview Deployment

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]
    paths-ignore:
      - "README.md"

env:
  NODE_VERSION: "20.18.0"

permissions:
  contents: read
  deployments: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Set Vercel Environment Variables
        run: |
          vercel env rm DEBUG_MESSAGE preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.PREVIEW_DEBUG_MESSAGE }}" | vercel env add DEBUG_MESSAGE preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DATABASE_URL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.DATABASE_URL }}" | vercel env add DATABASE_URL preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DIRECT_URL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.DIRECT_URL }}" | vercel env add DIRECT_URL preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXTAUTH_SECRET preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.NEXTAUTH_SECRET }}" | vercel env add NEXTAUTH_SECRET preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXTAUTH_URL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.NEXTAUTH_URL }}" | vercel env add NEXTAUTH_URL preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXT_PUBLIC_API_URL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.NEXT_PUBLIC_API_URL }}" | vercel env add NEXT_PUBLIC_API_URL preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm GOOGLE_CLIENT_ID preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.GOOGLE_CLIENT_ID }}" | vercel env add GOOGLE_CLIENT_ID preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm GOOGLE_CLIENT_SECRET preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.GOOGLE_CLIENT_SECRET }}" | vercel env add GOOGLE_CLIENT_SECRET preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm CLOUDINARY_API_KEY preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.CLOUDINARY_API_KEY }}" | vercel env add CLOUDINARY_API_KEY preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm CLOUDINARY_API_SECRET preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.CLOUDINARY_API_SECRET }}" | vercel env add CLOUDINARY_API_SECRET preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm CLOUDINARY_CLOUD_NAME preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.CLOUDINARY_CLOUD_NAME }}" | vercel env add CLOUDINARY_CLOUD_NAME preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.EMAIL }}" | vercel env add EMAIL preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL_PASSWORD preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.EMAIL_PASSWORD }}" | vercel env add EMAIL_PASSWORD preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Verify Vercel Environment Variables
        run: |
          echo "Listing Vercel environment variables:"
          vercel env ls preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DEBUG_MESSAGE: ${{ secrets.PREVIEW_DEBUG_MESSAGE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DEBUG_MESSAGE: ${{ secrets.PREVIEW_DEBUG_MESSAGE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
