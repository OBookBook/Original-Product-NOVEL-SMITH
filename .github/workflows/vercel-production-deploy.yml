name: Vercel Production Deployment

on:
  push:
    branches:
      - master

env:
  NODE_VERSION: "20.18.0"

permissions:
  contents: read
  deployments: write

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Set Vercel Environment Variables
        run: |
          vercel env rm DEBUG_MESSAGE production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.PROD_DEBUG_MESSAGE }}" | vercel env add DEBUG_MESSAGE production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DATABASE_URL production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.DATABASE_URL }}" | vercel env add DATABASE_URL production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DIRECT_URL production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.DIRECT_URL }}" | vercel env add DIRECT_URL production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXTAUTH_SECRET production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.NEXTAUTH_SECRET }}" | vercel env add NEXTAUTH_SECRET production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXTAUTH_URL production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.NEXTAUTH_URL_PRODUCTION }}" | vercel env add NEXTAUTH_URL production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm GOOGLE_CLIENT_ID production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.GOOGLE_CLIENT_ID }}" | vercel env add GOOGLE_CLIENT_ID production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm GOOGLE_CLIENT_SECRET production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.GOOGLE_CLIENT_SECRET }}" | vercel env add GOOGLE_CLIENT_SECRET production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm CLOUDINARY_API_KEY production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.CLOUDINARY_API_KEY }}" | vercel env add CLOUDINARY_API_KEY production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm CLOUDINARY_API_SECRET production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.CLOUDINARY_API_SECRET }}" | vercel env add CLOUDINARY_API_SECRET production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm CLOUDINARY_CLOUD_NAME production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.CLOUDINARY_CLOUD_NAME }}" | vercel env add CLOUDINARY_CLOUD_NAME production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.EMAIL }}" | vercel env add EMAIL production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL_PASSWORD production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.EMAIL_PASSWORD }}" | vercel env add EMAIL_PASSWORD production --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm OPENAI_API_KEY production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          printf '%s' "${{ secrets.OPENAI_API_KEY }}" | vercel env add OPENAI_API_KEY production --token=${{ secrets.VERCEL_TOKEN }}

        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Verify Vercel Environment Variables
        run: |
          echo "Listing Vercel environment variables:"
          vercel env ls production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DEBUG_MESSAGE: ${{ secrets.PROD_DEBUG_MESSAGE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL_PRODUCTION }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DEBUG_MESSAGE: ${{ secrets.PROD_DEBUG_MESSAGE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL_PRODUCTION }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
